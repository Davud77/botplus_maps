{"ast":null,"code":"var _jsxFileName = \"/app/src/components/maps/MapPage.tsx\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { MapContainer, TileLayer, useMap, useMapEvents } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport PanoramaViewer from './panoLayer/PanoramaViewer';\nimport Search from './Search';\nimport BaseLayer from './baseLayer/BaseLayer';\nimport { ContextMenu, MapEventHandlers, handleCopyCoordinates } from './ContextMenu';\nimport PanoLayer from './panoLayer/PanoLayer';\nimport PanoLayerButton from './panoLayer/PanoLayerButton';\nimport OrthoPanel from './orthoLayer/OrthoPanel';\nimport SelectionPanel from './panoLayer/SelectionPanel';\nimport CustomZoomControl from './CustomZoomControl';\nimport ProfileNav from '../ProfileNav';\n\n// Тип для маркеров панорам\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MapPage = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  // id выбранного маркера (строка или null)\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  // Раскрыт ли блок панорамы на весь экран\n  const [isExpanded, setIsExpanded] = useState(false);\n  // Виден ли блок панорамы внизу\n  const [isVisible, setIsVisible] = useState(false);\n\n  // Список маркеров, загруженных из PanoLayer\n  const [markers, setMarkers] = useState([]);\n\n  // Начальный центр карты\n  const [mapCenter, setMapCenter] = useState([43, 47]);\n\n  // Состояние контекстного меню\n  const [contextMenu, setContextMenu] = useState({\n    visible: false,\n    x: 0,\n    y: 0,\n    lat: 0,\n    lng: 0\n  });\n\n  // Текущий базовый слой\n  const [baseLayer, setBaseLayer] = useState('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png');\n\n  // Отображать ли слой панорам\n  const [showPanoLayer, setShowPanoLayer] = useState(false);\n  const [isLoadingMarkers, setIsLoadingMarkers] = useState(false);\n\n  // Ортофото\n  const [orthoImages, setOrthoImages] = useState([]);\n  const [showOrthoPanel, setShowOrthoPanel] = useState(false);\n  const [showOrthoLayer, setShowOrthoLayer] = useState(false);\n  const [selectedOrthos, setSelectedOrthos] = useState([]);\n\n  // Показать ли кнопку \"Добавить панораму\"\n  const [showAddPanoramaButton, setShowAddPanoramaButton] = useState(false);\n\n  // Панель массового выбора панорам\n  const [showSelectionPanel, setShowSelectionPanel] = useState(false);\n\n  // Ссылка на карту\n  const mapRef = useRef(null);\n\n  // Хендлер клика по маркеру панорамы\n  const handleMarkerClick = useCallback(async marker => {\n    try {\n      // Можно дополнительно проверить, что такой маркер реально есть\n      // Например, запросить краткую инфу\n      const response = await fetch(`https://api.botplus.ru/pano_info/${marker.id}`);\n      await response.json(); // не обязательно сохранять, если только нужна проверка\n\n      // При успехе сохраняем id и показываем панораму\n      setSelectedMarker(marker.id);\n      setIsVisible(true);\n    } catch (error) {\n      console.error('Ошибка при запросе данных о маркере:', error);\n      alert('Не удалось загрузить данные о панораме.');\n    }\n  }, []);\n\n  // Раскрыть/свернуть панораму\n  const toggleHeight = useCallback(() => {\n    setIsExpanded(prev => !prev);\n  }, []);\n\n  // Закрыть панораму\n  const closeInfo = useCallback(() => {\n    setIsVisible(false);\n    setSelectedMarker(null);\n  }, []);\n\n  // Копирование координат\n  const copyCoordinatesHandler = useCallback(() => {\n    handleCopyCoordinates(contextMenu);\n  }, [contextMenu]);\n\n  // Сохраняем ссылку на карту\n  const SetMapRef = () => {\n    _s();\n    const map = useMap();\n    useEffect(() => {\n      mapRef.current = map;\n    }, [map]);\n    return null;\n  };\n\n  // Поиск по координатам\n  _s(SetMapRef, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n    return [useMap];\n  });\n  const handleSearch = searchInput => {\n    const coords = searchInput.split(',').map(c => parseFloat(c.trim()));\n    if (coords.length === 2 && !isNaN(coords[0]) && !isNaN(coords[1])) {\n      if (mapRef.current) {\n        mapRef.current.setView(coords, 18);\n      }\n      setMapCenter(coords);\n    } else {\n      alert('Неверный формат координат. Используйте \"55.123, 47.456\"');\n    }\n  };\n\n  // Смена базового слоя\n  const handleLayerChange = layerUrl => {\n    setBaseLayer(layerUrl);\n  };\n\n  // Включение/выключение слоя панорам\n  const handlePanoLayerToggle = () => {\n    setShowPanoLayer(prev => !prev);\n  };\n\n  // Включение/выключение ортофото\n  const handleToggleOrthoLayer = images => {\n    setOrthoImages(images);\n    // Открыть/закрыть боковую панель\n    setShowOrthoPanel(prev => !prev);\n    // Сам слой\n    setShowOrthoLayer(prev => !prev);\n  };\n\n  // Выбор конкретного орто\n  const handleOrthoSelect = ortho => {\n    setSelectedOrthos(prevSelected => {\n      const alreadySelected = prevSelected.some(o => o.id === ortho.id);\n      if (alreadySelected) {\n        return prevSelected.filter(o => o.id !== ortho.id);\n      }\n      return [...prevSelected, ortho];\n    });\n  };\n\n  // Фокус на bounds выбранного орто\n  const fitToOrthoBounds = ortho => {\n    if (!mapRef.current || !ortho.bounds) return;\n    const sw = L.CRS.EPSG3857.unproject(L.point(ortho.bounds.west, ortho.bounds.south));\n    const ne = L.CRS.EPSG3857.unproject(L.point(ortho.bounds.east, ortho.bounds.north));\n    mapRef.current.fitBounds(L.latLngBounds(sw, ne));\n  };\n\n  // Пример пустого обработчика\n  const MapClickHandler = () => {\n    _s2();\n    useMapEvents({\n      click: () => {\n        // закрывать какие-то меню, если надо\n      }\n    });\n    return null;\n  };\n  _s2(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n    return [useMapEvents];\n  });\n  const handleAddPanoramaClick = () => {\n    // Пример: просто переходим на страницу загрузки\n    window.location.href = '/upload';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"map-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/logowhite2.png\",\n              alt: \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\",\n              className: \"logo-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-bar\",\n          children: /*#__PURE__*/_jsxDEV(Search, {\n            handleSearch: handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"end-box\",\n        children: [selectedMarker && isVisible ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button_control pointinfo\",\n              onClick: () => console.log('Информация о точке'),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/images/svg/info-icon.svg\",\n                alt: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\",\n                width: \"30\",\n                height: \"30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"visible_control\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button_control\",\n                onClick: closeInfo,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/images/svg/close-icon.svg\",\n                  alt: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n                  width: \"30\",\n                  height: \"30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [showAddPanoramaButton && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"layers-button\",\n              onClick: () => setShowSelectionPanel(!showSelectionPanel),\n              title: \"\\u0412\\u044B\\u0431\\u043E\\u0440\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/images/svg/select-icon.svg\",\n                alt: \"\\u0412\\u044B\\u0431\\u043E\\u0440\",\n                width: \"24\",\n                height: \"24\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this), showSelectionPanel && /*#__PURE__*/_jsxDEV(SelectionPanel, {\n              handleSelection: type => {\n                console.log('Selected type:', type);\n                setShowSelectionPanel(false);\n              },\n              closePanel: () => setShowSelectionPanel(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"layers-button\",\n              onClick: handleAddPanoramaClick,\n              title: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0430\\u043D\\u043E\\u0440\\u0430\\u043C\\u044B\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/images/svg/add-pano-icon.svg\",\n                alt: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0430\\u043D\\u043E\\u0440\\u0430\\u043C\\u044B\",\n                width: \"24\",\n                height: \"24\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(BaseLayer, {\n              handleLayerChange: handleLayerChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PanoLayerButton, {\n              handlePanoLayerToggle: handlePanoLayerToggle,\n              isLoading: isLoadingMarkers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"layers-button\",\n              onClick: () => handleToggleOrthoLayer(orthoImages),\n              title: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043E\\u0440\\u0442\\u043E\\u0444\\u043E\\u0442\\u043E\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/images/svg/ortho-icon.svg\",\n                alt: \"\\u041E\\u0440\\u0442\\u043E\\u0444\\u043E\\u0442\\u043E\",\n                width: \"24\",\n                height: \"24\",\n                className: \"ortho-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-buttons\",\n          children: /*#__PURE__*/_jsxDEV(ProfileNav, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), selectedMarker && isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-marker-info\",\n      style: {\n        height: isExpanded ? '100%' : '50%'\n      },\n      children: /*#__PURE__*/_jsxDEV(PanoramaViewer, {\n        markerId: selectedMarker,\n        isExpanded: isExpanded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: mapCenter,\n      zoom: 5,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      zoomControl: false,\n      maxZoom: 20,\n      children: [/*#__PURE__*/_jsxDEV(SetMapRef, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: baseLayer,\n        maxZoom: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomZoomControl, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), showPanoLayer && /*#__PURE__*/_jsxDEV(PanoLayer, {\n        selectedMarker: selectedMarker,\n        onMarkerClick: handleMarkerClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), showOrthoLayer && selectedOrthos.map(ortho => /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: `https://api.botplus.ru/orthophotos/${ortho.id}/tiles/{z}/{x}/{y}.png`,\n        maxZoom: 20,\n        opacity: 0.7\n      }, ortho.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(MapClickHandler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapEventHandlers, {\n        setContextMenu: setContextMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), showOrthoPanel && /*#__PURE__*/_jsxDEV(OrthoPanel, {\n      onClose: () => setShowOrthoPanel(false),\n      orthoImages: orthoImages,\n      onOrthoSelect: handleOrthoSelect,\n      selectedOrthos: selectedOrthos,\n      fitToBounds: fitToOrthoBounds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContextMenu, {\n      contextMenu: contextMenu,\n      handleCopyCoordinates: copyCoordinatesHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s3(MapPage, \"ngrGafr+N94mrB3U1/H5gsP9GkI=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","MapContainer","TileLayer","useMap","useMapEvents","L","PanoramaViewer","Search","BaseLayer","ContextMenu","MapEventHandlers","handleCopyCoordinates","PanoLayer","PanoLayerButton","OrthoPanel","SelectionPanel","CustomZoomControl","ProfileNav","jsxDEV","_jsxDEV","Fragment","_Fragment","MapPage","_s3","_s","$RefreshSig$","_s2","selectedMarker","setSelectedMarker","isExpanded","setIsExpanded","isVisible","setIsVisible","markers","setMarkers","mapCenter","setMapCenter","contextMenu","setContextMenu","visible","x","y","lat","lng","baseLayer","setBaseLayer","showPanoLayer","setShowPanoLayer","isLoadingMarkers","setIsLoadingMarkers","orthoImages","setOrthoImages","showOrthoPanel","setShowOrthoPanel","showOrthoLayer","setShowOrthoLayer","selectedOrthos","setSelectedOrthos","showAddPanoramaButton","setShowAddPanoramaButton","showSelectionPanel","setShowSelectionPanel","mapRef","handleMarkerClick","marker","response","fetch","id","json","error","console","alert","toggleHeight","prev","closeInfo","copyCoordinatesHandler","SetMapRef","map","current","handleSearch","searchInput","coords","split","c","parseFloat","trim","length","isNaN","setView","handleLayerChange","layerUrl","handlePanoLayerToggle","handleToggleOrthoLayer","images","handleOrthoSelect","ortho","prevSelected","alreadySelected","some","o","filter","fitToOrthoBounds","bounds","sw","CRS","EPSG3857","unproject","point","west","south","ne","east","north","fitBounds","latLngBounds","MapClickHandler","click","handleAddPanoramaClick","window","location","href","style","height","width","position","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","log","title","handleSelection","type","closePanel","isLoading","markerId","center","zoom","zoomControl","maxZoom","url","onMarkerClick","opacity","onClose","onOrthoSelect","fitToBounds","_c","$RefreshReg$"],"sources":["/app/src/components/maps/MapPage.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport {\n  MapContainer,\n  TileLayer,\n  useMap,\n  useMapEvents,\n} from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-cluster';\nimport { Marker } from 'react-leaflet';\n\nimport 'leaflet/dist/leaflet.css';\nimport L, { Map as LeafletMap } from 'leaflet';\n\nimport PanoramaViewer from './panoLayer/PanoramaViewer';\nimport Search from './Search';\nimport BaseLayer from './baseLayer/BaseLayer';\nimport {\n  ContextMenu,\n  MapEventHandlers,\n  handleCopyCoordinates,\n} from './ContextMenu';\nimport { defaultIcon, activeIcon } from '../icons';\nimport PanoLayer from './panoLayer/PanoLayer';\nimport PanoLayerButton from './panoLayer/PanoLayerButton';\nimport OrthoLayer, { OrthoImageType } from './orthoLayer/OrthoLayer';\nimport OrthoPanel from './orthoLayer/OrthoPanel';\nimport SelectionPanel from './panoLayer/SelectionPanel';\nimport CustomZoomControl from './CustomZoomControl';\nimport ProfileNav from '../ProfileNav';\n\n// Тип для маркеров панорам\ninterface MarkerType {\n  id: string;\n  lat: number;\n  lng: number;\n}\n\nconst MapPage: React.FC = () => {\n  // id выбранного маркера (строка или null)\n  const [selectedMarker, setSelectedMarker] = useState<string | null>(null);\n  // Раскрыт ли блок панорамы на весь экран\n  const [isExpanded, setIsExpanded] = useState(false);\n  // Виден ли блок панорамы внизу\n  const [isVisible, setIsVisible] = useState(false);\n\n  // Список маркеров, загруженных из PanoLayer\n  const [markers, setMarkers] = useState<MarkerType[]>([]);\n\n  // Начальный центр карты\n  const [mapCenter, setMapCenter] = useState<[number, number]>([43, 47]);\n\n  // Состояние контекстного меню\n  const [contextMenu, setContextMenu] = useState({\n    visible: false,\n    x: 0,\n    y: 0,\n    lat: 0,\n    lng: 0,\n  });\n\n  // Текущий базовый слой\n  const [baseLayer, setBaseLayer] = useState<string>(\n    'https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png'\n  );\n\n  // Отображать ли слой панорам\n  const [showPanoLayer, setShowPanoLayer] = useState<boolean>(false);\n  const [isLoadingMarkers, setIsLoadingMarkers] = useState<boolean>(false);\n\n  // Ортофото\n  const [orthoImages, setOrthoImages] = useState<OrthoImageType[]>([]);\n  const [showOrthoPanel, setShowOrthoPanel] = useState<boolean>(false);\n  const [showOrthoLayer, setShowOrthoLayer] = useState<boolean>(false);\n  const [selectedOrthos, setSelectedOrthos] = useState<OrthoImageType[]>([]);\n\n  // Показать ли кнопку \"Добавить панораму\"\n  const [showAddPanoramaButton, setShowAddPanoramaButton] = useState<boolean>(false);\n\n  // Панель массового выбора панорам\n  const [showSelectionPanel, setShowSelectionPanel] = useState(false);\n\n  // Ссылка на карту\n  const mapRef = useRef<LeafletMap | null>(null);\n\n  // Хендлер клика по маркеру панорамы\n  const handleMarkerClick = useCallback(async (marker: MarkerType) => {\n    try {\n      // Можно дополнительно проверить, что такой маркер реально есть\n      // Например, запросить краткую инфу\n      const response = await fetch(`https://api.botplus.ru/pano_info/${marker.id}`);\n      await response.json(); // не обязательно сохранять, если только нужна проверка\n\n      // При успехе сохраняем id и показываем панораму\n      setSelectedMarker(marker.id);\n      setIsVisible(true);\n    } catch (error) {\n      console.error('Ошибка при запросе данных о маркере:', error);\n      alert('Не удалось загрузить данные о панораме.');\n    }\n  }, []);\n\n  // Раскрыть/свернуть панораму\n  const toggleHeight = useCallback(() => {\n    setIsExpanded((prev) => !prev);\n  }, []);\n\n  // Закрыть панораму\n  const closeInfo = useCallback(() => {\n    setIsVisible(false);\n    setSelectedMarker(null);\n  }, []);\n\n  // Копирование координат\n  const copyCoordinatesHandler = useCallback(() => {\n    handleCopyCoordinates(contextMenu);\n  }, [contextMenu]);\n\n  // Сохраняем ссылку на карту\n  const SetMapRef = () => {\n    const map = useMap();\n    useEffect(() => {\n      mapRef.current = map;\n    }, [map]);\n    return null;\n  };\n\n  // Поиск по координатам\n  const handleSearch = (searchInput: string) => {\n    const coords = searchInput.split(',').map((c) => parseFloat(c.trim()));\n    if (coords.length === 2 && !isNaN(coords[0]) && !isNaN(coords[1])) {\n      if (mapRef.current) {\n        mapRef.current.setView(coords as [number, number], 18);\n      }\n      setMapCenter(coords as [number, number]);\n    } else {\n      alert('Неверный формат координат. Используйте \"55.123, 47.456\"');\n    }\n  };\n\n  // Смена базового слоя\n  const handleLayerChange = (layerUrl: string) => {\n    setBaseLayer(layerUrl);\n  };\n\n  // Включение/выключение слоя панорам\n  const handlePanoLayerToggle = () => {\n    setShowPanoLayer(prev => !prev);\n  };\n\n  // Включение/выключение ортофото\n  const handleToggleOrthoLayer = (images: OrthoImageType[]) => {\n    setOrthoImages(images);\n    // Открыть/закрыть боковую панель\n    setShowOrthoPanel((prev) => !prev);\n    // Сам слой\n    setShowOrthoLayer((prev) => !prev);\n  };\n\n  // Выбор конкретного орто\n  const handleOrthoSelect = (ortho: OrthoImageType) => {\n    setSelectedOrthos((prevSelected) => {\n      const alreadySelected = prevSelected.some((o) => o.id === ortho.id);\n      if (alreadySelected) {\n        return prevSelected.filter((o) => o.id !== ortho.id);\n      }\n      return [...prevSelected, ortho];\n    });\n  };\n\n  // Фокус на bounds выбранного орто\n  const fitToOrthoBounds = (ortho: OrthoImageType) => {\n    if (!mapRef.current || !ortho.bounds) return;\n    const sw = L.CRS.EPSG3857.unproject(L.point(ortho.bounds.west, ortho.bounds.south));\n    const ne = L.CRS.EPSG3857.unproject(L.point(ortho.bounds.east, ortho.bounds.north));\n    mapRef.current.fitBounds(L.latLngBounds(sw, ne));\n  };\n\n  // Пример пустого обработчика\n  const MapClickHandler = () => {\n    useMapEvents({\n      click: () => {\n        // закрывать какие-то меню, если надо\n      },\n    });\n    return null;\n  };\n\n  const handleAddPanoramaClick = () => {\n    // Пример: просто переходим на страницу загрузки\n    window.location.href = '/upload';\n  };\n\n  return (\n    <div style={{ height: '100vh', width: '100%', position: 'relative' }}>\n      {/* Шапка с логотипом, поиском и т.д. */}\n      <header className=\"map-header\">\n        <div className=\"first-box\">\n          <div className=\"logo\">\n            <a href=\"/\">\n              <img\n                src=\"/images/logowhite2.png\"\n                alt=\"Логотип\"\n                className=\"logo-image\"\n              />\n            </a>\n          </div>\n          <div className=\"search-bar\">\n            <Search handleSearch={handleSearch} />\n          </div>\n        </div>\n        <div className=\"end-box\">\n\n\n          {selectedMarker && isVisible ? (\n            <>\n              {/* Если панорама открыта, показываем кнопки управления (инфа, свернуть/закрыть) */}\n              <div className=\"map-buttons\">\n                <button\n                  className=\"button_control pointinfo\"\n                  onClick={() => console.log('Информация о точке')}\n                >\n                  <img\n                    src=\"/images/svg/info-icon.svg\"\n                    alt=\"Информация\"\n                    width=\"30\"\n                    height=\"30\"\n                  />\n                </button>\n              </div>\n              <div className=\"map-buttons\">\n                <div className=\"visible_control\">\n                  <button className=\"button_control\" onClick={closeInfo}>\n                    <img\n                      src=\"/images/svg/close-icon.svg\"\n                      alt=\"Закрыть\"\n                      width=\"30\"\n                      height=\"30\"\n                    />\n                  </button>\n                </div>\n              </div>\n            </>\n          ) : (\n            <>\n              {/* Если панорама не открыта, показываем другие кнопки */}\n              {showAddPanoramaButton && (\n                <div className=\"map-buttons\">\n                  <button\n                    className=\"layers-button\"\n                    onClick={() => setShowSelectionPanel(!showSelectionPanel)}\n                    title=\"Выбор\"\n                  >\n                    <img\n                      src=\"/images/svg/select-icon.svg\"\n                      alt=\"Выбор\"\n                      width=\"24\"\n                      height=\"24\"\n                    />\n                  </button>\n\n                  {showSelectionPanel && (\n                    <SelectionPanel\n                      handleSelection={(type: string) => {\n                        console.log('Selected type:', type);\n                        setShowSelectionPanel(false);\n                      }}\n                      closePanel={() => setShowSelectionPanel(false)}\n                    />\n                  )}\n\n                  <button\n                    className=\"layers-button\"\n                    onClick={handleAddPanoramaClick}\n                    title=\"Добавить панорамы\"\n                  >\n                    <img\n                      src=\"/images/svg/add-pano-icon.svg\"\n                      alt=\"Добавить панорамы\"\n                      width=\"24\"\n                      height=\"24\"\n                    />\n                  </button>\n                </div>\n              )}\n\n              <div className=\"map-buttons\">\n                <BaseLayer handleLayerChange={handleLayerChange} />\n                <PanoLayerButton \n                  handlePanoLayerToggle={handlePanoLayerToggle}\n                  isLoading={isLoadingMarkers}\n                />\n                <button\n                  className=\"layers-button\"\n                  onClick={() => handleToggleOrthoLayer(orthoImages)}\n                  title=\"Показать ортофото\"\n                >\n                  <img\n                    src=\"/images/svg/ortho-icon.svg\"\n                    alt=\"Ортофото\"\n                    width=\"24\"\n                    height=\"24\"\n                    className=\"ortho-icon\"\n                  />\n                </button>\n              </div>\n\n            </>\n          )}\n          <div className=\"map-buttons\">\n            <ProfileNav />\n          </div>\n\n        </div>\n      </header>\n\n      {/* Контейнер под панораму, если маркер выбран */}\n      {selectedMarker && isVisible && (\n        <div\n          className=\"selected-marker-info\"\n          style={{ height: isExpanded ? '100%' : '50%' }}\n        >\n          {/* Передаём выбранный markerId (уже точно string) в панораму */}\n          <PanoramaViewer\n            markerId={selectedMarker}\n            isExpanded={isExpanded}\n          />\n        </div>\n      )}\n\n      {/* Сама карта */}\n      <MapContainer\n        center={mapCenter}\n        zoom={5}\n        style={{ height: '100%', width: '100%' }}\n        zoomControl={false}\n        maxZoom={20}\n      >\n        <SetMapRef />\n\n        <TileLayer url={baseLayer} maxZoom={20} />\n        <CustomZoomControl />\n\n        {showPanoLayer && (\n          <PanoLayer\n            selectedMarker={selectedMarker}\n            onMarkerClick={handleMarkerClick}\n          />\n        )}\n\n        {showOrthoLayer &&\n          selectedOrthos.map((ortho) => (\n            <TileLayer\n              key={ortho.id}\n              url={`https://api.botplus.ru/orthophotos/${ortho.id}/tiles/{z}/{x}/{y}.png`}\n              maxZoom={20}\n              opacity={0.7}\n            />\n          ))}\n\n        <MapClickHandler />\n        <MapEventHandlers setContextMenu={setContextMenu} />\n      </MapContainer>\n\n      {/* Панель с выбором ортофото */}\n      {showOrthoPanel && (\n        <OrthoPanel\n          onClose={() => setShowOrthoPanel(false)}\n          orthoImages={orthoImages}\n          onOrthoSelect={handleOrthoSelect}\n          selectedOrthos={selectedOrthos}\n          fitToBounds={fitToOrthoBounds}\n        />\n      )}\n\n      {/* Контекстное меню (копировать координаты) */}\n      <ContextMenu\n        contextMenu={contextMenu}\n        handleCopyCoordinates={copyCoordinatesHandler}\n      />\n    </div>\n  );\n};\n\nexport default MapPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}