{"ast":null,"code":"var _jsxFileName = \"/app/src/components/maps/panoLayer/PanoLayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useMap } from 'react-leaflet';\nimport debounce from 'lodash/debounce';\nimport { Marker } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-cluster';\nimport { defaultIcon, activeIcon } from '../../icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PanoLayer = ({\n  selectedMarker,\n  onMarkerClick\n}) => {\n  _s();\n  const [markers, setMarkers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedBounds, setLoadedBounds] = useState([]);\n  const map = useMap();\n\n  // Функция для получения маркеров в пределах экстента\n  const fetchMarkersInBounds = async bounds => {\n    if (isLoading || !bounds) return;\n    const {\n      north,\n      south,\n      east,\n      west\n    } = bounds;\n\n    // Проверяем, что все необходимые свойства существуют\n    if (typeof north !== 'number' || typeof south !== 'number' || typeof east !== 'number' || typeof west !== 'number') {\n      console.warn('Invalid bounds object:', bounds);\n      return;\n    }\n    const boundsKey = `${north.toFixed(2)},${south.toFixed(2)},${east.toFixed(2)},${west.toFixed(2)}`;\n\n    // Проверяем, не загружали ли мы уже маркеры для этих границ\n    if (loadedBounds.includes(boundsKey)) {\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await fetch(`https://api.botplus.ru/panoramas?north=${north}&south=${south}&east=${east}&west=${west}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const newMarkers = data.map(item => ({\n        id: item.id,\n        lat: item.latitude,\n        lng: item.longitude\n      }));\n\n      // Объединяем новые маркеры с существующими, избегая дубликатов\n      setMarkers(prevMarkers => {\n        const existingIds = new Set(prevMarkers.map(m => m.id));\n        const uniqueNewMarkers = newMarkers.filter(m => !existingIds.has(m.id));\n        return [...prevMarkers, ...uniqueNewMarkers];\n      });\n\n      // Добавляем текущие границы в список загруженных\n      setLoadedBounds(prev => [...prev, boundsKey]);\n    } catch (error) {\n      console.error('Error fetching panoramas:', error);\n      alert('Не удалось загрузить данные о панорамах.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Дебаунсированная версия функции загрузки маркеров\n  const debouncedFetchMarkers = useCallback(debounce(bounds => {\n    fetchMarkersInBounds(bounds);\n  }, 500), []);\n\n  // Обработчик изменения экстента карты\n  useEffect(() => {\n    const handleMoveEnd = () => {\n      const bounds = map.getBounds();\n      if (bounds) {\n        debouncedFetchMarkers(bounds);\n      }\n    };\n    map.on('moveend', handleMoveEnd);\n    return () => {\n      map.off('moveend', handleMoveEnd);\n      debouncedFetchMarkers.cancel();\n    };\n  }, [map, debouncedFetchMarkers]);\n\n  // Загрузка начальных маркеров при монтировании компонента\n  useEffect(() => {\n    const bounds = map.getBounds();\n    if (bounds) {\n      fetchMarkersInBounds(bounds);\n    }\n  }, [map]);\n  return /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n    disableClusteringAtZoom: 18,\n    maxClusterRadius: 50,\n    children: markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [marker.lat, marker.lng],\n      icon: selectedMarker === marker.id ? activeIcon : defaultIcon,\n      eventHandlers: {\n        click: () => onMarkerClick(marker)\n      }\n    }, `${marker.lat}-${marker.lng}-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(PanoLayer, \"Tk0NLVlYiN6EKPeolUzAHmHDMzM=\", false, function () {\n  return [useMap];\n});\n_c = PanoLayer;\nexport default PanoLayer;\nvar _c;\n$RefreshReg$(_c, \"PanoLayer\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMap","debounce","Marker","MarkerClusterGroup","defaultIcon","activeIcon","jsxDEV","_jsxDEV","PanoLayer","selectedMarker","onMarkerClick","_s","markers","setMarkers","isLoading","setIsLoading","loadedBounds","setLoadedBounds","map","fetchMarkersInBounds","bounds","north","south","east","west","console","warn","boundsKey","toFixed","includes","response","fetch","ok","Error","status","data","json","newMarkers","item","id","lat","latitude","lng","longitude","prevMarkers","existingIds","Set","m","uniqueNewMarkers","filter","has","prev","error","alert","debouncedFetchMarkers","handleMoveEnd","getBounds","on","off","cancel","disableClusteringAtZoom","maxClusterRadius","children","marker","index","position","icon","eventHandlers","click","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/maps/panoLayer/PanoLayer.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useMap } from 'react-leaflet';\nimport debounce from 'lodash/debounce';\nimport { Marker } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-cluster';\nimport { defaultIcon, activeIcon } from '../../icons';\n\ninterface MarkerType {\n  id: string;\n  lat: number;\n  lng: number;\n}\n\ninterface PanoLayerProps {\n  selectedMarker: string | null;\n  onMarkerClick: (marker: MarkerType) => void;\n}\n\nconst PanoLayer: React.FC<PanoLayerProps> = ({ selectedMarker, onMarkerClick }) => {\n  const [markers, setMarkers] = useState<MarkerType[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedBounds, setLoadedBounds] = useState<string[]>([]);\n  const map = useMap();\n\n  // Функция для получения маркеров в пределах экстента\n  const fetchMarkersInBounds = async (bounds: any) => {\n    if (isLoading || !bounds) return;\n\n    const { north, south, east, west } = bounds;\n    \n    // Проверяем, что все необходимые свойства существуют\n    if (typeof north !== 'number' || typeof south !== 'number' || \n        typeof east !== 'number' || typeof west !== 'number') {\n      console.warn('Invalid bounds object:', bounds);\n      return;\n    }\n\n    const boundsKey = `${north.toFixed(2)},${south.toFixed(2)},${east.toFixed(2)},${west.toFixed(2)}`;\n\n    // Проверяем, не загружали ли мы уже маркеры для этих границ\n    if (loadedBounds.includes(boundsKey)) {\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const response = await fetch(\n        `https://api.botplus.ru/panoramas?north=${north}&south=${south}&east=${east}&west=${west}`\n      );\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const newMarkers = data.map((item: any) => ({\n        id: item.id,\n        lat: item.latitude,\n        lng: item.longitude,\n      }));\n\n      // Объединяем новые маркеры с существующими, избегая дубликатов\n      setMarkers(prevMarkers => {\n        const existingIds = new Set(prevMarkers.map(m => m.id));\n        const uniqueNewMarkers = newMarkers.filter(m => !existingIds.has(m.id));\n        return [...prevMarkers, ...uniqueNewMarkers];\n      });\n\n      // Добавляем текущие границы в список загруженных\n      setLoadedBounds(prev => [...prev, boundsKey]);\n    } catch (error) {\n      console.error('Error fetching panoramas:', error);\n      alert('Не удалось загрузить данные о панорамах.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Дебаунсированная версия функции загрузки маркеров\n  const debouncedFetchMarkers = useCallback(\n    debounce((bounds: any) => {\n      fetchMarkersInBounds(bounds);\n    }, 500),\n    []\n  );\n\n  // Обработчик изменения экстента карты\n  useEffect(() => {\n    const handleMoveEnd = () => {\n      const bounds = map.getBounds();\n      if (bounds) {\n        debouncedFetchMarkers(bounds);\n      }\n    };\n\n    map.on('moveend', handleMoveEnd);\n    return () => {\n      map.off('moveend', handleMoveEnd);\n      debouncedFetchMarkers.cancel();\n    };\n  }, [map, debouncedFetchMarkers]);\n\n  // Загрузка начальных маркеров при монтировании компонента\n  useEffect(() => {\n    const bounds = map.getBounds();\n    if (bounds) {\n      fetchMarkersInBounds(bounds);\n    }\n  }, [map]);\n\n  return (\n    <MarkerClusterGroup disableClusteringAtZoom={18} maxClusterRadius={50}>\n      {markers.map((marker, index) => (\n        <Marker\n          position={[marker.lat, marker.lng]}\n          key={`${marker.lat}-${marker.lng}-${index}`}\n          icon={selectedMarker === marker.id ? activeIcon : defaultIcon}\n          eventHandlers={{ click: () => onMarkerClick(marker) }}\n        />\n      ))}\n    </MarkerClusterGroup>\n  );\n};\n\nexport default PanoLayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}