{"ast":null,"code":"var _jsxFileName = \"/app/src/components/maps/panoLayer/PanoLayerButton.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PanoLayerButton = ({\n  handlePanoLayerToggle,\n  isLoading\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"layers-button\",\n    onClick: handlePanoLayerToggle,\n    title: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043F\\u0430\\u043D\\u043E\\u0440\\u0430\\u043C\\u044B\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/svg/pano-layer-icon.svg\",\n      alt: \"\\u0421\\u043B\\u043E\\u0439 \\u043F\\u0430\\u043D\\u043E\\u0440\\u0430\\u043C\",\n      width: \"30\",\n      height: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = PanoLayerButton;\nexport default PanoLayerButton;\nvar _c;\n$RefreshReg$(_c, \"PanoLayerButton\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PanoLayerButton","handlePanoLayerToggle","isLoading","className","onClick","title","children","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/maps/panoLayer/PanoLayerButton.tsx"],"sourcesContent":["import React from 'react';\n\ninterface PanoLayerButtonProps {\n  handlePanoLayerToggle: () => void;\n  isLoading?: boolean;\n}\n\nconst PanoLayerButton: React.FC<PanoLayerButtonProps> = ({ handlePanoLayerToggle, isLoading }) => {\n  return (\n    <button \n      className=\"layers-button\" \n      onClick={handlePanoLayerToggle}\n      title=\"Показать панорамы\"\n    >\n      <img \n        src=\"/images/svg/pano-layer-icon.svg\" \n        alt=\"Слой панорам\"\n        width=\"30\"\n        height=\"30\"\n      />\n      {isLoading && (\n        <div className=\"loading-indicator\">\n          <span className=\"spinner\"></span>\n        </div>\n      )}\n    </button>\n  );\n};\n\nexport default PanoLayerButton; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,eAA+C,GAAGA,CAAC;EAAEC,qBAAqB;EAAEC;AAAU,CAAC,KAAK;EAChG,oBACEH,OAAA;IACEI,SAAS,EAAC,eAAe;IACzBC,OAAO,EAAEH,qBAAsB;IAC/BI,KAAK,EAAC,mGAAmB;IAAAC,QAAA,gBAEzBP,OAAA;MACEQ,GAAG,EAAC,iCAAiC;MACrCC,GAAG,EAAC,qEAAc;MAClBC,KAAK,EAAC,IAAI;MACVC,MAAM,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,EACDZ,SAAS,iBACRH,OAAA;MAAKI,SAAS,EAAC,mBAAmB;MAAAG,QAAA,eAChCP,OAAA;QAAMI,SAAS,EAAC;MAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb,CAAC;AAACC,EAAA,GApBIf,eAA+C;AAsBrD,eAAeA,eAAe;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}