{"ast":null,"code":"var _jsxFileName = \"/app/src/components/UploadPano.tsx\",\n  _s = $RefreshSig$();\n// src/components/UploadPano.tsx\nimport React, { useState, useRef } from 'react';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://api.botplus.ru';\nconst UploadPano = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const fileInputRef = useRef(null);\n  const [fileStatuses, setFileStatuses] = useState({});\n  const [isDragging, setIsDragging] = useState(false);\n  const [filter, setFilter] = useState('all');\n  const BATCH_SIZE = 50;\n  const onFileChange = event => {\n    var _event$target$files, _event$target$files$l, _event$target$files2;\n    const newFiles = Array.from((_event$target$files = event.target.files) !== null && _event$target$files !== void 0 ? _event$target$files : []).filter(file => file.type === \"image/jpeg\");\n    if (newFiles.length !== ((_event$target$files$l = (_event$target$files2 = event.target.files) === null || _event$target$files2 === void 0 ? void 0 : _event$target$files2.length) !== null && _event$target$files$l !== void 0 ? _event$target$files$l : 0)) {\n      alert('Можно загружать только файлы с расширением .jpg');\n    }\n    setFiles(prevFiles => [...prevFiles, ...newFiles]);\n    setFileStatuses(prevStatuses => {\n      const newStatuses = {};\n      newFiles.forEach(file => {\n        newStatuses[file.name] = {\n          status: 'selected',\n          log: ''\n        };\n      });\n      return {\n        ...prevStatuses,\n        ...newStatuses\n      };\n    });\n  };\n  const onInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const onInputKeyDown = event => {\n    if (event.key === 'Enter' || event.key === ',' || event.key === '.') {\n      event.preventDefault();\n      if (inputValue.trim()) {\n        setTags([...tags, inputValue.trim()]);\n        setInputValue('');\n      }\n    }\n  };\n  const removeTag = indexToRemove => {\n    setTags(tags.filter((_, index) => index !== indexToRemove));\n  };\n  const uploadFilesBatch = async batch => {\n    const formData = new FormData();\n    batch.forEach(file => {\n      formData.append(\"files\", file);\n      setFileStatuses(prevStatuses => ({\n        ...prevStatuses,\n        [file.name]: {\n          status: 'uploading',\n          log: 'Загрузка в Minio...'\n        }\n      }));\n    });\n    formData.append(\"tags\", tags.join(', '));\n    try {\n      const response = await fetch(`${API_URL}/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n      result.successful_uploads.forEach(filename => {\n        setFileStatuses(prevStatuses => ({\n          ...prevStatuses,\n          [filename]: {\n            status: 'success',\n            log: 'Успешно загружен'\n          }\n        }));\n      });\n      result.failed_uploads.forEach((filename, index) => {\n        setFileStatuses(prevStatuses => ({\n          ...prevStatuses,\n          [filename]: {\n            status: 'failed',\n            log: result.skipped_files[index]\n          }\n        }));\n      });\n    } catch (error) {\n      console.error('Ошибка при загрузке:', error);\n      batch.forEach(file => {\n        setFileStatuses(prevStatuses => ({\n          ...prevStatuses,\n          [file.name]: {\n            status: 'failed',\n            log: `Произошла ошибка при загрузке файлов: ${error.message}`\n          }\n        }));\n      });\n    }\n  };\n  const onFileUpload = async () => {\n    const batches = [];\n    for (let i = 0; i < files.length; i += BATCH_SIZE) {\n      batches.push(files.slice(i, i + BATCH_SIZE));\n    }\n    for (const batch of batches) {\n      await uploadFilesBatch(batch);\n    }\n  };\n  const handleFileInputClick = () => {\n    var _fileInputRef$current;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n  const getThumbnailClass = status => {\n    switch (status) {\n      case 'selected':\n        return 'thumbnail';\n      case 'uploading':\n        return 'thumbnail uploading';\n      case 'success':\n        return 'thumbnail success';\n      case 'failed':\n        return 'thumbnail failed';\n      default:\n        return 'thumbnail';\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    setIsDragging(false);\n    const newFiles = Array.from(event.dataTransfer.files).filter(file => file.type === \"image/jpeg\");\n    if (newFiles.length !== event.dataTransfer.files.length) {\n      alert('Можно загружать только файлы с расширением .jpg');\n    }\n    setFiles(prevFiles => [...prevFiles, ...newFiles]);\n    setFileStatuses(prevStatuses => {\n      const newStatuses = {};\n      newFiles.forEach(file => {\n        newStatuses[file.name] = {\n          status: 'selected',\n          log: ''\n        };\n      });\n      return {\n        ...prevStatuses,\n        ...newStatuses\n      };\n    });\n  };\n  const filteredFiles = files.filter(file => {\n    var _fileStatuses$file$na, _fileStatuses$file$na2, _fileStatuses$file$na3;\n    if (filter === 'all') return true;\n    if (filter === 'success') return ((_fileStatuses$file$na = fileStatuses[file.name]) === null || _fileStatuses$file$na === void 0 ? void 0 : _fileStatuses$file$na.status) === 'success';\n    if (filter === 'failed') return ((_fileStatuses$file$na2 = fileStatuses[file.name]) === null || _fileStatuses$file$na2 === void 0 ? void 0 : _fileStatuses$file$na2.status) === 'failed';\n    if (filter === 'selected') return ((_fileStatuses$file$na3 = fileStatuses[file.name]) === null || _fileStatuses$file$na3 === void 0 ? void 0 : _fileStatuses$file$na3.status) === 'selected';\n    return true;\n  });\n  const clearFiles = () => {\n    setFiles([]);\n    setFileStatuses({});\n  };\n  const countFilesByStatus = status => {\n    return files.filter(file => {\n      var _fileStatuses$file$na4;\n      return ((_fileStatuses$file$na4 = fileStatuses[file.name]) === null || _fileStatuses$file$na4 === void 0 ? void 0 : _fileStatuses$file$na4.status) === status;\n    }).length;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contend\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tag-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u041C\\u0430\\u0441\\u0441\\u043E\\u0432\\u0430\\u044F \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043F\\u0430\\u043D\\u043E\\u0440\\u0430\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags-input-container\",\n          children: [tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tag-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeTag(index),\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputValue,\n            onChange: onInputChange,\n            onKeyDown: onInputKeyDown,\n            placeholder: tags.length === 0 && inputValue.length === 0 ? \"Введите теги через запятую\" : \"\",\n            rows: 1,\n            cols: 50,\n            className: \"input-tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mini_pano ${isDragging ? 'dragging' : ''}`,\n        onDragOver: handleDragOver,\n        onDragLeave: handleDragLeave,\n        onDrop: handleDrop,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          accept: \".jpg\",\n          onChange: onFileChange,\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), files.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drag-drop-container\",\n          onClick: handleFileInputClick,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041F\\u0435\\u0440\\u0435\\u0442\\u0430\\u0449\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\\u044B \\u0441\\u044E\\u0434\\u0430 \\u0438\\u043B\\u0438 \\u043D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\u0434\\u043B\\u044F \\u0432\\u044B\\u0431\\u043E\\u0440\\u0430 \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mini_header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filters\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setFilter('all'),\n                className: \"button_white\",\n                children: [\"\\u0412\\u0441\\u0435 (\", files.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setFilter('success'),\n                className: \"button_white\",\n                children: [\"\\u0423\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E (\", countFilesByStatus('success'), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setFilter('failed'),\n                className: \"button_white\",\n                children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0438 (\", countFilesByStatus('failed'), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setFilter('selected'),\n                className: \"button_white\",\n                children: [\"\\u0411\\u0435\\u0437 \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441\\u0430 (\", countFilesByStatus('selected'), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"functions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleFileInputClick,\n                className: \"button_white\",\n                children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\\u044B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: clearFiles,\n                className: \"button_white\",\n                children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), filteredFiles.map((file, index) => {\n            var _fileStatuses$file$na5, _fileStatuses$file$na6;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: getThumbnailClass((_fileStatuses$file$na5 = fileStatuses[file.name]) === null || _fileStatuses$file$na5 === void 0 ? void 0 : _fileStatuses$file$na5.status),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: URL.createObjectURL(file),\n                alt: file.name,\n                className: \"thumbnail-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"thumbnail-name\",\n                  children: file.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"thumbnail-log\",\n                  children: (_fileStatuses$file$na6 = fileStatuses[file.name]) === null || _fileStatuses$file$na6 === void 0 ? void 0 : _fileStatuses$file$na6.log\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onFileUpload,\n        className: \"button\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPano, \"KSIfqQ3a8CvD8oRLz14Gq426IeQ=\");\n_c = UploadPano;\nexport default UploadPano;\nvar _c;\n$RefreshReg$(_c, \"UploadPano\");","map":{"version":3,"names":["React","useState","useRef","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","UploadPano","_s","files","setFiles","tags","setTags","inputValue","setInputValue","fileInputRef","fileStatuses","setFileStatuses","isDragging","setIsDragging","filter","setFilter","BATCH_SIZE","onFileChange","event","_event$target$files","_event$target$files$l","_event$target$files2","newFiles","Array","from","target","file","type","length","alert","prevFiles","prevStatuses","newStatuses","forEach","name","status","log","onInputChange","value","onInputKeyDown","key","preventDefault","trim","removeTag","indexToRemove","_","index","uploadFilesBatch","batch","formData","FormData","append","join","response","fetch","method","body","ok","Error","result","json","successful_uploads","filename","failed_uploads","skipped_files","error","console","message","onFileUpload","batches","i","push","slice","handleFileInputClick","_fileInputRef$current","current","click","getThumbnailClass","handleDragOver","handleDragLeave","handleDrop","dataTransfer","filteredFiles","_fileStatuses$file$na","_fileStatuses$file$na2","_fileStatuses$file$na3","clearFiles","countFilesByStatus","_fileStatuses$file$na4","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tag","onClick","onChange","onKeyDown","placeholder","rows","cols","onDragOver","onDragLeave","onDrop","multiple","accept","ref","style","display","_fileStatuses$file$na5","_fileStatuses$file$na6","src","URL","createObjectURL","alt","_c","$RefreshReg$"],"sources":["/app/src/components/UploadPano.tsx"],"sourcesContent":["// src/components/UploadPano.tsx\r\nimport React, { useState, useRef, ChangeEvent, KeyboardEvent, DragEvent } from 'react';\r\nimport Header from './Header';\r\n\r\ninterface FileStatus {\r\n  status: 'selected' | 'uploading' | 'success' | 'failed';\r\n  log: string;\r\n}\r\n\r\ninterface FileStatuses {\r\n  [key: string]: FileStatus;\r\n}\r\n\r\ntype FilterType = 'all' | 'success' | 'failed' | 'selected';\r\n\r\nconst API_URL = 'https://api.botplus.ru';\r\n\r\nconst UploadPano: React.FC = () => {\r\n  const [files, setFiles] = useState<File[]>([]);\r\n  const [tags, setTags] = useState<string[]>([]);\r\n  const [inputValue, setInputValue] = useState<string>('');\r\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\r\n  const [fileStatuses, setFileStatuses] = useState<FileStatuses>({});\r\n  const [isDragging, setIsDragging] = useState<boolean>(false);\r\n  const [filter, setFilter] = useState<FilterType>('all');\r\n\r\n  const BATCH_SIZE = 50;\r\n\r\n  const onFileChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const newFiles = Array.from(event.target.files ?? []).filter((file): file is File => file.type === \"image/jpeg\");\r\n    if (newFiles.length !== (event.target.files?.length ?? 0)) {\r\n      alert('Можно загружать только файлы с расширением .jpg');\r\n    }\r\n    setFiles(prevFiles => [...prevFiles, ...newFiles]);\r\n    setFileStatuses(prevStatuses => {\r\n      const newStatuses: FileStatuses = {};\r\n      newFiles.forEach(file => {\r\n        newStatuses[file.name] = { status: 'selected', log: '' };\r\n      });\r\n      return { ...prevStatuses, ...newStatuses };\r\n    });\r\n  };\r\n\r\n  const onInputChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const onInputKeyDown = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (event.key === 'Enter' || event.key === ',' || event.key === '.') {\r\n      event.preventDefault();\r\n      if (inputValue.trim()) {\r\n        setTags([...tags, inputValue.trim()]);\r\n        setInputValue('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeTag = (indexToRemove: number) => {\r\n    setTags(tags.filter((_, index) => index !== indexToRemove));\r\n  };\r\n\r\n  const uploadFilesBatch = async (batch: File[]) => {\r\n    const formData = new FormData();\r\n    batch.forEach(file => {\r\n      formData.append(\"files\", file);\r\n      setFileStatuses(prevStatuses => ({\r\n        ...prevStatuses,\r\n        [file.name]: { status: 'uploading', log: 'Загрузка в Minio...' }\r\n      }));\r\n    });\r\n    formData.append(\"tags\", tags.join(', '));\r\n\r\n    try {\r\n      const response = await fetch(`${API_URL}/upload`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      result.successful_uploads.forEach((filename: string) => {\r\n        setFileStatuses(prevStatuses => ({\r\n          ...prevStatuses,\r\n          [filename]: { status: 'success', log: 'Успешно загружен' }\r\n        }));\r\n      });\r\n      result.failed_uploads.forEach((filename: string, index: number) => {\r\n        setFileStatuses(prevStatuses => ({\r\n          ...prevStatuses,\r\n          [filename]: { status: 'failed', log: result.skipped_files[index] }\r\n        }));\r\n      });\r\n    } catch (error: any) {\r\n      console.error('Ошибка при загрузке:', error);\r\n      batch.forEach(file => {\r\n        setFileStatuses(prevStatuses => ({\r\n          ...prevStatuses,\r\n          [file.name]: { status: 'failed', log: `Произошла ошибка при загрузке файлов: ${error.message}` }\r\n        }));\r\n      });\r\n    }\r\n  };\r\n\r\n  const onFileUpload = async () => {\r\n    const batches: File[][] = [];\r\n    for (let i = 0; i < files.length; i += BATCH_SIZE) {\r\n      batches.push(files.slice(i, i + BATCH_SIZE));\r\n    }\r\n\r\n    for (const batch of batches) {\r\n      await uploadFilesBatch(batch);\r\n    }\r\n  };\r\n\r\n  const handleFileInputClick = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  const getThumbnailClass = (status: string | undefined) => {\r\n    switch (status) {\r\n      case 'selected':\r\n        return 'thumbnail';\r\n      case 'uploading':\r\n        return 'thumbnail uploading';\r\n      case 'success':\r\n        return 'thumbnail success';\r\n      case 'failed':\r\n        return 'thumbnail failed';\r\n      default:\r\n        return 'thumbnail';\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (event: DragEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const handleDragLeave = () => {\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleDrop = (event: DragEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n    setIsDragging(false);\r\n    const newFiles = Array.from(event.dataTransfer.files).filter((file): file is File => file.type === \"image/jpeg\");\r\n    if (newFiles.length !== event.dataTransfer.files.length) {\r\n      alert('Можно загружать только файлы с расширением .jpg');\r\n    }\r\n    setFiles(prevFiles => [...prevFiles, ...newFiles]);\r\n    setFileStatuses(prevStatuses => {\r\n      const newStatuses: FileStatuses = {};\r\n      newFiles.forEach(file => {\r\n        newStatuses[file.name] = { status: 'selected', log: '' };\r\n      });\r\n      return { ...prevStatuses, ...newStatuses };\r\n    });\r\n  };\r\n\r\n  const filteredFiles = files.filter(file => {\r\n    if (filter === 'all') return true;\r\n    if (filter === 'success') return fileStatuses[file.name]?.status === 'success';\r\n    if (filter === 'failed') return fileStatuses[file.name]?.status === 'failed';\r\n    if (filter === 'selected') return fileStatuses[file.name]?.status === 'selected';\r\n    return true;\r\n  });\r\n\r\n  const clearFiles = () => {\r\n    setFiles([]);\r\n    setFileStatuses({});\r\n  };\r\n\r\n  const countFilesByStatus = (status: string) => {\r\n    return files.filter(file => fileStatuses[file.name]?.status === status).length;\r\n  };\r\n\r\n  return (\r\n    <div className=\"contend\">\r\n      <Header />\r\n      <div className=\"centered-container\">\r\n        <div className=\"tag-container\">\r\n          <h1>Массовая загрузка панорам</h1>\r\n          <div className=\"tags-input-container\">\r\n            {tags.map((tag, index) => (\r\n              <div key={index} className=\"tag-item\">\r\n                <span>{tag}</span>\r\n                <button onClick={() => removeTag(index)}>x</button>\r\n              </div>\r\n            ))}\r\n            <textarea\r\n              value={inputValue}\r\n              onChange={onInputChange}\r\n              onKeyDown={onInputKeyDown}\r\n              placeholder={tags.length === 0 && inputValue.length === 0 ? \"Введите теги через запятую\" : \"\"}\r\n              rows={1}\r\n              cols={50}\r\n              className=\"input-tags\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={`mini_pano ${isDragging ? 'dragging' : ''}`}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          onDrop={handleDrop}\r\n        >\r\n          <input\r\n            type=\"file\"\r\n            multiple\r\n            accept=\".jpg\"\r\n            onChange={onFileChange}\r\n            ref={fileInputRef}\r\n            style={{ display: 'none' }}\r\n          />\r\n          {files.length === 0 ? (\r\n            <div className=\"drag-drop-container\" onClick={handleFileInputClick}>\r\n              <p>Перетащите файлы сюда или нажмите для выбора файлов</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"mini_header\">\r\n                <div className=\"filters\">\r\n                  <button onClick={() => setFilter('all')} className=\"button_white\">Все ({files.length})</button>\r\n                  <button onClick={() => setFilter('success')} className=\"button_white\">Успешно ({countFilesByStatus('success')})</button>\r\n                  <button onClick={() => setFilter('failed')} className=\"button_white\">Ошибки ({countFilesByStatus('failed')})</button>\r\n                  <button onClick={() => setFilter('selected')} className=\"button_white\">Без статуса ({countFilesByStatus('selected')})</button>\r\n                </div>\r\n                <div className=\"functions\">\r\n                  <button onClick={handleFileInputClick} className=\"button_white\">Добавить файлы</button>\r\n                  <button onClick={clearFiles} className=\"button_white\">Очистить список</button>\r\n                </div>\r\n              </div>\r\n              {filteredFiles.map((file, index) => (\r\n                <div key={index} className={getThumbnailClass(fileStatuses[file.name]?.status)}>\r\n                  <img\r\n                    src={URL.createObjectURL(file)}\r\n                    alt={file.name}\r\n                    className=\"thumbnail-image\"\r\n                  />\r\n                  <div>\r\n                    <p className=\"thumbnail-name\">{file.name}</p>\r\n                    <p className=\"thumbnail-log\">{fileStatuses[file.name]?.log}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </>\r\n          )}\r\n        </div>\r\n        {files.length > 0 && (\r\n          <button onClick={onFileUpload} className=\"button\">Загрузить</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPano;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}